"Encoder/Decoder (see previous lecture)",
"Von Neumann Machine – traditional computer model based on Turing’s theoretical ideas",
"-Model: RAM (input) &rarr; Processor (Get instruction) &rarr; Execution with control unit &rarr; RAM (output)",
"Index: MAR – memory address register, MBR – memory buffer register, D0-7 Registers, ALU – arithmetic logic unit, INC – incrementer, PC – program counter, IR – instruction register, CU – control unit, in ram {Mode, AR – address register, DR – data register}",
"-Start with IP/PC (same thing)",
"-Address in PC sent to address register (MAR &rarr; AR)",
"-Sends to DR then to buffer (D0 to D7) – buffer may can contain data or instructions",
"--Depends on MBR",
"Every instruction in binary has two parts; OP code and address (or something else)",
"-Only OP code goes down to control unit",
"IR is basically a “dead end”	address will move onto PC, which will increment itself then write into MAR &rarr; DR &rarr; MBR (overwrites previous content) &rarr; next set of instructions",
"CPU loop",
"-AR &larr; PC",
"-PC &larr; PC + 1",
"-DR &larr; RAM[AR]",
"-IR &larr; DR",
"-Each line involves one tick (some improvements, like incrementation on same tick)",
"Micro Instruction – way to express CPU operation step by step",
"[] for index like arrays, () for arguments",
"-IR(OP, params)",
"-&larr; indicates move",
"BUS – Address, R/W, Data",
"-1 bit/wire, bottle neck, duality of operation (modes)",
